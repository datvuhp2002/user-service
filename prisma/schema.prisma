// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["mongoDb"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  user_id      String        @id @default(auto()) @map("_id") @db.ObjectId
  username     String
  password     String
  email        String        @unique
  status       Boolean       @default(true)
  phone        String?
  avatar       String?
  name         String?
  birthday     DateTime?
  createdBy    String?       @db.ObjectId
  modifiedBy   String?       @db.ObjectId
  createdAt    DateTime      @default(now())
  updatedAt    DateTime?     @updatedAt
  deletedAt    DateTime?
  deletedMark  Boolean       @default(false)
  UserProperty UserProperty?
}

enum RolesEnum {
  ADMIN
  MANAGER
  STAFF
}

model Role {
  role_id      String         @id @default(auto()) @map("_id") @db.ObjectId
  name         RolesEnum      @unique @default(STAFF)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime?      @updatedAt
  deletedAt    DateTime?
  UserProperty UserProperty[]
}

model UserProperty {
  user_property_id String    @id @default(auto()) @map("_id") @db.ObjectId
  author           User      @relation(fields: [user_id], references: [user_id]) // Chỉ định User là one-to-one
  user_id          String    @unique @db.ObjectId
  role             Role      @relation(fields: [role_id], references: [role_id])
  role_id          String    @db.ObjectId
  department_id    String?   @db.ObjectId
  createdAt        DateTime? @default(now())
  updatedAt        DateTime? @updatedAt
  deletedAt        DateTime?
  deletedMark      Boolean   @default(false)
}
